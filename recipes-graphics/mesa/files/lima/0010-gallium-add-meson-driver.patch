From b2d0b3b3314539bc016cde160a3e482ebe9dee47 Mon Sep 17 00:00:00 2001
From: Neil Armstrong <narmstrong@baylibre.com>
Date: Fri, 27 Jul 2018 17:36:22 +0800
Subject: [PATCH 10/52] gallium: add meson driver

Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
---
 .travis.yml                                        |  2 +-
 Android.mk                                         |  5 +-
 Makefile.am                                        |  2 +-
 configure.ac                                       | 12 ++++-
 src/gallium/Android.mk                             |  1 +
 src/gallium/Makefile.am                            |  4 ++
 .../auxiliary/pipe-loader/pipe_loader_drm.c        |  5 ++
 src/gallium/auxiliary/target-helpers/drm_helper.h  | 23 +++++++++
 .../auxiliary/target-helpers/drm_helper_public.h   |  3 ++
 src/gallium/drivers/meson/Android.mk               | 39 ++++++++++++++++
 src/gallium/drivers/meson/Automake.inc             |  9 ++++
 src/gallium/drivers/meson/Makefile.am              |  8 ++++
 src/gallium/drivers/meson/Makefile.sources         |  2 +
 src/gallium/targets/dri/Makefile.am                |  1 +
 src/gallium/targets/dri/target.c                   |  3 ++
 src/gallium/winsys/meson/drm/Android.mk            | 33 +++++++++++++
 src/gallium/winsys/meson/drm/Makefile.am           | 34 ++++++++++++++
 src/gallium/winsys/meson/drm/Makefile.sources      |  3 ++
 src/gallium/winsys/meson/drm/meson_drm_public.h    | 31 +++++++++++++
 src/gallium/winsys/meson/drm/meson_drm_winsys.c    | 54 ++++++++++++++++++++++
 20 files changed, 269 insertions(+), 5 deletions(-)
 create mode 100644 src/gallium/drivers/meson/Android.mk
 create mode 100644 src/gallium/drivers/meson/Automake.inc
 create mode 100644 src/gallium/drivers/meson/Makefile.am
 create mode 100644 src/gallium/drivers/meson/Makefile.sources
 create mode 100644 src/gallium/winsys/meson/drm/Android.mk
 create mode 100644 src/gallium/winsys/meson/drm/Makefile.am
 create mode 100644 src/gallium/winsys/meson/drm/Makefile.sources
 create mode 100644 src/gallium/winsys/meson/drm/meson_drm_public.h
 create mode 100644 src/gallium/winsys/meson/drm/meson_drm_winsys.c

diff --git a/.travis.yml b/.travis.yml
index 6a49580..ebf36a5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -161,7 +161,7 @@ matrix:
         - DRI_LOADERS="--disable-glx --disable-gbm --disable-egl"
         - DRI_DRIVERS=""
         - GALLIUM_ST="--enable-dri --disable-opencl --disable-xa --disable-nine --disable-xvmc --disable-vdpau --disable-va --disable-omx-bellagio --disable-gallium-osmesa"
-        - GALLIUM_DRIVERS="i915,nouveau,pl111,r300,r600,freedreno,svga,swrast,v3d,vc4,virgl,etnaviv,imx,lima,sun4i,exynos"
+        - GALLIUM_DRIVERS="i915,nouveau,pl111,r300,r600,freedreno,svga,swrast,v3d,vc4,virgl,etnaviv,imx,lima,sun4i,exynos,meson"
         - VULKAN_DRIVERS=""
         - LIBUNWIND_FLAGS="--enable-libunwind"
       addons:
diff --git a/Android.mk b/Android.mk
index 9705984..71cbbd0 100644
--- a/Android.mk
+++ b/Android.mk
@@ -24,7 +24,7 @@
 # BOARD_GPU_DRIVERS should be defined.  The valid values are
 #
 #   classic drivers: i915 i965
-#   gallium drivers: swrast freedreno i915g nouveau pl111 r300g r600g radeonsi vc4 virgl vmwgfx etnaviv imx lima sun4i exynos
+#   gallium drivers: swrast freedreno i915g nouveau pl111 r300g r600g radeonsi vc4 virgl vmwgfx etnaviv imx lima sun4i exynos meson
 #
 # The main target is libGLES_mesa.  For each classic driver enabled, a DRI
 # module will also be built.  DRI modules will be loaded by libGLES_mesa.
@@ -63,7 +63,8 @@ gallium_drivers := \
 	imx.HAVE_GALLIUM_IMX \
 	lima.HAVE_GALLIUM_LIMA \
 	sun4i.HAVE_GALLIUM_SUN4I \
-	exynos.HAVE_GALLIUM_EXYNOS
+	exynos.HAVE_GALLIUM_EXYNOS \
+	meson.HAVE_GALLIUM_MESON
 
 ifeq ($(BOARD_GPU_DRIVERS),all)
 MESA_BUILD_CLASSIC := $(filter HAVE_%, $(subst ., , $(classic_drivers)))
diff --git a/Makefile.am b/Makefile.am
index 7abf2a9..0d9270a 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -45,7 +45,7 @@ AM_DISTCHECK_CONFIGURE_FLAGS = \
 	--enable-libunwind \
 	--with-platforms=x11,wayland,drm,surfaceless \
 	--with-dri-drivers=i915,i965,nouveau,radeon,r200,swrast \
-	--with-gallium-drivers=i915,nouveau,r300,pl111,r600,radeonsi,freedreno,svga,swrast,vc4,tegra,virgl,swr,etnaviv,imx,lima,sun4i,exynos \
+	--with-gallium-drivers=i915,nouveau,r300,pl111,r600,radeonsi,freedreno,svga,swrast,vc4,tegra,virgl,swr,etnaviv,imx,lima,sun4i,exynos,meson \
 	--with-vulkan-drivers=intel,radeon
 
 ACLOCAL_AMFLAGS = -I m4
diff --git a/configure.ac b/configure.ac
index 0e612f0..d1fc204 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1366,7 +1366,7 @@ GALLIUM_DRIVERS_DEFAULT="r300,r600,svga,swrast"
 AC_ARG_WITH([gallium-drivers],
     [AS_HELP_STRING([--with-gallium-drivers@<:@=DIRS...@:>@],
         [comma delimited Gallium drivers list, e.g.
-        "i915,nouveau,r300,r600,radeonsi,freedreno,pl111,svga,swrast,swr,tegra,v3d,vc4,virgl,etnaviv,imx,lima,sun4i,exynos"
+        "i915,nouveau,r300,r600,radeonsi,freedreno,pl111,svga,swrast,swr,tegra,v3d,vc4,virgl,etnaviv,imx,lima,sun4i,exynos,meson"
         @<:@default=r300,r600,svga,swrast@:>@])],
     [with_gallium_drivers="$withval"],
     [with_gallium_drivers="$GALLIUM_DRIVERS_DEFAULT"])
@@ -2813,6 +2813,9 @@ if test -n "$with_gallium_drivers"; then
         xexynos)
             HAVE_GALLIUM_EXYNOS=yes
             ;;
+        xmeson)
+            HAVE_GALLIUM_MESON=yes
+            ;;
         *)
             AC_MSG_ERROR([Unknown Gallium driver: $driver])
             ;;
@@ -2858,6 +2861,10 @@ if test "x$HAVE_GALLIUM_LIMA" != xyes -a "X$HAVE_GALLIUM_EXYNOS" = xyes ; then
     AC_MSG_ERROR([Building with exynos requires lima])
 fi
 
+if test "x$HAVE_GALLIUM_LIMA" != xyes -a "x$HAVE_GALLIUM_MESON" = xyes  ; then
+    AC_MSG_ERROR([Building with meson requires lima])
+fi
+
 detect_old_buggy_llvm() {
     dnl llvm-config may not give the right answer when llvm is a built as a
     dnl single shared library, so we must work the library name out for
@@ -2968,6 +2975,7 @@ AM_CONDITIONAL(HAVE_GALLIUM_VIRGL, test "x$HAVE_GALLIUM_VIRGL" = xyes)
 AM_CONDITIONAL(HAVE_GALLIUM_LIMA, test "x$HAVE_GALLIUM_LIMA" = xyes)
 AM_CONDITIONAL(HAVE_GALLIUM_SUN4I, test "x$HAVE_GALLIUM_SUN4I" = xyes)
 AM_CONDITIONAL(HAVE_GALLIUM_EXYNOS, test "x$HAVE_GALLIUM_EXYNOS" = xyes)
+AM_CONDITIONAL(HAVE_GALLIUM_MESON, test "x$HAVE_GALLIUM_MESON" = xyes)
 
 AM_CONDITIONAL(HAVE_GALLIUM_STATIC_TARGETS, test "x$enable_shared_pipe_drivers" = xno)
 
@@ -3114,6 +3122,7 @@ AC_CONFIG_FILES([Makefile
                  src/gallium/drivers/lima/Makefile
                  src/gallium/drivers/sun4i/Makefile
                  src/gallium/drivers/exynos/Makefile
+                 src/gallium/drivers/meson/Makefile
                  src/gallium/state_trackers/clover/Makefile
                  src/gallium/state_trackers/dri/Makefile
                  src/gallium/state_trackers/glx/xlib/Makefile
@@ -3166,6 +3175,7 @@ AC_CONFIG_FILES([Makefile
                  src/gallium/winsys/lima/drm/Makefile
                  src/gallium/winsys/sun4i/drm/Makefile
                  src/gallium/winsys/exynos/drm/Makefile
+                 src/gallium/winsys/meson/drm/Makefile
                  src/gbm/Makefile
                  src/gbm/main/gbm.pc
                  src/glx/Makefile
diff --git a/src/gallium/Android.mk b/src/gallium/Android.mk
index 3486e2e..1bf56f5 100644
--- a/src/gallium/Android.mk
+++ b/src/gallium/Android.mk
@@ -50,6 +50,7 @@ SUBDIRS += winsys/imx/drm
 SUBDIRS += winsys/lima/drm drivers/lima
 SUBDIRS += winsys/sun4i/drm drivers/sun4i
 SUBDIRS += winsys/exynos/drm drivers/exynos
+SUBDIRS += winsys/meson/drm drivers/meson
 SUBDIRS += state_trackers/dri
 
 # sort to eliminate any duplicates
diff --git a/src/gallium/Makefile.am b/src/gallium/Makefile.am
index 0a2d1f0..85af0f7 100644
--- a/src/gallium/Makefile.am
+++ b/src/gallium/Makefile.am
@@ -111,6 +111,10 @@ if HAVE_GALLIUM_EXYNOS
 SUBDIRS += drivers/exynos winsys/exynos/drm
 endif
 
+if HAVE_GALLIUM_MESON
+SUBDIRS += drivers/meson winsys/meson/drm
+endif
+
 ## the sw winsys'
 SUBDIRS += winsys/sw/null
 
diff --git a/src/gallium/auxiliary/pipe-loader/pipe_loader_drm.c b/src/gallium/auxiliary/pipe-loader/pipe_loader_drm.c
index f20614d..e8f1457 100644
--- a/src/gallium/auxiliary/pipe-loader/pipe_loader_drm.c
+++ b/src/gallium/auxiliary/pipe-loader/pipe_loader_drm.c
@@ -155,6 +155,11 @@ static const struct drm_driver_descriptor driver_descriptors[] = {
         .create_screen = pipe_exynos_create_screen,
         .configuration = pipe_default_configuration_query,
     },
+    {
+        .driver_name = "meson",
+        .create_screen = pipe_meson_create_screen,
+        .configuration = pipe_default_configuration_query,
+    },
 };
 #endif
 
diff --git a/src/gallium/auxiliary/target-helpers/drm_helper.h b/src/gallium/auxiliary/target-helpers/drm_helper.h
index cfdae13..e635d29 100644
--- a/src/gallium/auxiliary/target-helpers/drm_helper.h
+++ b/src/gallium/auxiliary/target-helpers/drm_helper.h
@@ -472,4 +472,27 @@ pipe_exynos_create_screen(int fd, const struct pipe_screen_config *config)
 
 #endif
 
+#ifdef GALLIUM_MESON
+#include "meson/drm/meson_drm_public.h"
+
+struct pipe_screen *
+pipe_meson_create_screen(int fd, const struct pipe_screen_config *config)
+{
+   struct pipe_screen *screen;
+
+   screen = meson_screen_create(fd);
+   return screen ? debug_screen_wrap(screen) : NULL;
+}
+
+#else
+
+struct pipe_screen *
+pipe_meson_create_screen(int fd, const struct pipe_screen_config *config)
+{
+   fprintf(stderr, "meson: driver missing\n");
+   return NULL;
+}
+
+#endif
+
 #endif /* DRM_HELPER_H */
diff --git a/src/gallium/auxiliary/target-helpers/drm_helper_public.h b/src/gallium/auxiliary/target-helpers/drm_helper_public.h
index 510fbe6..10ce35f 100644
--- a/src/gallium/auxiliary/target-helpers/drm_helper_public.h
+++ b/src/gallium/auxiliary/target-helpers/drm_helper_public.h
@@ -63,6 +63,9 @@ pipe_sun4i_create_screen(int fd, const struct pipe_screen_config *config);
 struct pipe_screen *
 pipe_exynos_create_screen(int fd, const struct pipe_screen_config *config);
 
+struct pipe_screen *
+pipe_meson_create_screen(int fd, const struct pipe_screen_config *config);
+
 const struct drm_conf_ret *
 pipe_default_configuration_query(enum drm_conf conf);
 
diff --git a/src/gallium/drivers/meson/Android.mk b/src/gallium/drivers/meson/Android.mk
new file mode 100644
index 0000000..bb696d9
--- /dev/null
+++ b/src/gallium/drivers/meson/Android.mk
@@ -0,0 +1,39 @@
+# Copyright (c) 2017 Lima Project
+#
+# Permission is hereby granted, free of charge, to any person obtaining a
+# copy of this software and associated documentation files (the "Software"),
+# to deal in the Software without restriction, including without limitation
+# the rights to use, copy, modify, merge, publish, distribute, sublicense,
+# and/or sell copies of the Software, and to permit persons to whom the
+# Software is furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included
+# in all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+# DEALINGS IN THE SOFTWARE.
+
+LOCAL_PATH := $(call my-dir)
+
+# get C_SOURCES
+include $(LOCAL_PATH)/Makefile.sources
+
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := \
+	$(C_SOURCES)
+
+LOCAL_MODULE := libmesa_pipe_meson
+
+include $(GALLIUM_COMMON_MK)
+include $(BUILD_STATIC_LIBRARY)
+
+ifneq ($(HAVE_GALLIUM_MESON),)
+GALLIUM_TARGET_DRIVERS += meson
+$(eval GALLIUM_LIBS += $(LOCAL_MODULE) libmesa_winsys_meson)
+endif
diff --git a/src/gallium/drivers/meson/Automake.inc b/src/gallium/drivers/meson/Automake.inc
new file mode 100644
index 0000000..202f69a
--- /dev/null
+++ b/src/gallium/drivers/meson/Automake.inc
@@ -0,0 +1,9 @@
+if HAVE_GALLIUM_MESON
+
+TARGET_DRIVERS += meson
+TARGET_CPPFLAGS += -DGALLIUM_MESON
+TARGET_LIB_DEPS += \
+    $(top_builddir)/src/gallium/winsys/meson/drm/libmesondrm.la \
+    $(LIBDRM_LIBS)
+
+endif
diff --git a/src/gallium/drivers/meson/Makefile.am b/src/gallium/drivers/meson/Makefile.am
new file mode 100644
index 0000000..1f0568b
--- /dev/null
+++ b/src/gallium/drivers/meson/Makefile.am
@@ -0,0 +1,8 @@
+include $(top_srcdir)/src/gallium/Automake.inc
+
+AM_CPPFLAGS = \
+	$(GALLIUM_CFLAGS)
+
+noinst_LTLIBRARIES = libmeson.la
+
+libmeson_la_SOURCES = $(C_SOURCES)
diff --git a/src/gallium/drivers/meson/Makefile.sources b/src/gallium/drivers/meson/Makefile.sources
new file mode 100644
index 0000000..2039675
--- /dev/null
+++ b/src/gallium/drivers/meson/Makefile.sources
@@ -0,0 +1,2 @@
+C_SOURCES :=
+
diff --git a/src/gallium/targets/dri/Makefile.am b/src/gallium/targets/dri/Makefile.am
index 047111b..b5323d8 100644
--- a/src/gallium/targets/dri/Makefile.am
+++ b/src/gallium/targets/dri/Makefile.am
@@ -88,6 +88,7 @@ include $(top_srcdir)/src/gallium/drivers/imx/Automake.inc
 include $(top_srcdir)/src/gallium/drivers/lima/Automake.inc
 include $(top_srcdir)/src/gallium/drivers/sun4i/Automake.inc
 include $(top_srcdir)/src/gallium/drivers/exynos/Automake.inc
+include $(top_srcdir)/src/gallium/drivers/meson/Automake.inc
 
 include $(top_srcdir)/src/gallium/drivers/softpipe/Automake.inc
 include $(top_srcdir)/src/gallium/drivers/llvmpipe/Automake.inc
diff --git a/src/gallium/targets/dri/target.c b/src/gallium/targets/dri/target.c
index 6428e66..3064ecb 100644
--- a/src/gallium/targets/dri/target.c
+++ b/src/gallium/targets/dri/target.c
@@ -99,4 +99,7 @@ DEFINE_LOADER_DRM_ENTRYPOINT(sun4i_drm)
 #if defined(GALLIUM_EXYNOS)
 DEFINE_LOADER_DRM_ENTRYPOINT(exynos)
 #endif
+#if defined(GALLIUM_MESON)
+DEFINE_LOADER_DRM_ENTRYPOINT(meson)
+#endif
 #endif
diff --git a/src/gallium/winsys/meson/drm/Android.mk b/src/gallium/winsys/meson/drm/Android.mk
new file mode 100644
index 0000000..c97298a
--- /dev/null
+++ b/src/gallium/winsys/meson/drm/Android.mk
@@ -0,0 +1,33 @@
+# Copyright (c) 2017 Lima Project
+#
+# Permission is hereby granted, free of charge, to any person obtaining a
+# copy of this software and associated documentation files (the "Software"),
+# to deal in the Software without restriction, including without limitation
+# the rights to use, copy, modify, merge, publish, distribute, sublicense,
+# and/or sell copies of the Software, and to permit persons to whom the
+# Software is furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included
+# in all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+# DEALINGS IN THE SOFTWARE.
+
+LOCAL_PATH := $(call my-dir)
+
+# get C_SOURCES
+include $(LOCAL_PATH)/Makefile.sources
+
+include $(CLEAR_VARS)
+
+LOCAL_SRC_FILES := $(C_SOURCES)
+
+LOCAL_MODULE := libmesa_winsys_meson
+
+include $(GALLIUM_COMMON_MK)
+include $(BUILD_STATIC_LIBRARY)
diff --git a/src/gallium/winsys/meson/drm/Makefile.am b/src/gallium/winsys/meson/drm/Makefile.am
new file mode 100644
index 0000000..53e5056
--- /dev/null
+++ b/src/gallium/winsys/meson/drm/Makefile.am
@@ -0,0 +1,34 @@
+# Copyright (c) 2017 Lima Project
+#
+# Permission is hereby granted, free of charge, to any person obtaining a
+# copy of this software and associated documentation files (the "Software"),
+# to deal in the Software without restriction, including without limitation
+# the rights to use, copy, modify, merge, publish, distribute, sublicense,
+# and/or sell copies of the Software, and to permit persons to whom the
+# Software is furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice (including the next
+# paragraph) shall be included in all copies or substantial portions of the
+# Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+# DEALINGS IN THE SOFTWARE.
+
+include Makefile.sources
+include $(top_srcdir)/src/gallium/Automake.inc
+
+AM_CFLAGS = \
+	-I$(top_srcdir)/src/gallium/drivers \
+	-I$(top_srcdir)/src/gallium/winsys \
+	$(GALLIUM_WINSYS_CFLAGS) \
+	$(LIBDRM_CFLAGS)
+
+noinst_LTLIBRARIES = libmesondrm.la
+
+libmesondrm_la_SOURCES = $(C_SOURCES)
diff --git a/src/gallium/winsys/meson/drm/Makefile.sources b/src/gallium/winsys/meson/drm/Makefile.sources
new file mode 100644
index 0000000..d066f21
--- /dev/null
+++ b/src/gallium/winsys/meson/drm/Makefile.sources
@@ -0,0 +1,3 @@
+C_SOURCES := \
+   meson_drm_public.h \
+   meson_drm_winsys.c
diff --git a/src/gallium/winsys/meson/drm/meson_drm_public.h b/src/gallium/winsys/meson/drm/meson_drm_public.h
new file mode 100644
index 0000000..e423795
--- /dev/null
+++ b/src/gallium/winsys/meson/drm/meson_drm_public.h
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2017 Lima Project
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the next
+ * paragraph) shall be included in all copies or substantial portions of the
+ * Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ */
+
+#ifndef __MESON_DRM_PUBLIC_H__
+#define __MESON_DRM_PUBLIC_H__
+
+struct pipe_screen;
+
+struct pipe_screen *meson_screen_create(int fd);
+
+#endif /* __MESON_DRM_PUBLIC_H__ */
diff --git a/src/gallium/winsys/meson/drm/meson_drm_winsys.c b/src/gallium/winsys/meson/drm/meson_drm_winsys.c
new file mode 100644
index 0000000..02aa159
--- /dev/null
+++ b/src/gallium/winsys/meson/drm/meson_drm_winsys.c
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) 2017 Lima Project
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the next
+ * paragraph) shall be included in all copies or substantial portions of the
+ * Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ */
+
+#include <fcntl.h>
+#include <unistd.h>
+
+#include "meson_drm_public.h"
+#include "lima/drm/lima_drm_public.h"
+#include "xf86drm.h"
+
+#include "pipe/p_screen.h"
+#include "renderonly/renderonly.h"
+
+struct pipe_screen *meson_screen_create(int fd)
+{
+   struct renderonly ro = {
+      /* Passes the lima-allocated BO through to the meson DRM device using
+       * PRIME buffer sharing.  The lima BO must be linear, which the SCANOUT
+       * flag on allocation will have ensured.
+       */
+      .create_for_resource = renderonly_create_kms_dumb_buffer_for_resource,
+      .kms_fd = fd,
+      .gpu_fd = drmOpenWithType("lima", NULL, DRM_NODE_RENDER),
+   };
+
+   if (ro.gpu_fd < 0)
+      return NULL;
+
+   struct pipe_screen *screen = lima_drm_screen_create_renderonly(&ro);
+   if (!screen)
+      close(ro.gpu_fd);
+
+   return screen;
+}
-- 
2.0.1

