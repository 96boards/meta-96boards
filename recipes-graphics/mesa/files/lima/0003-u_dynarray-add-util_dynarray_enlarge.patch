From bdfe0084287087caca70d36f20bac852ee3bec67 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Mon, 19 Feb 2018 21:44:44 +0800
Subject: [PATCH 03/52] u_dynarray: add util_dynarray_enlarge

This is for the case that user only know a max size
it wants to append to the array and enlarge the array
capacity before writing into it.

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 src/util/u_dynarray.h | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/src/util/u_dynarray.h b/src/util/u_dynarray.h
index dcbbc06..a495f48 100644
--- a/src/util/u_dynarray.h
+++ b/src/util/u_dynarray.h
@@ -77,11 +77,9 @@ util_dynarray_clear(struct util_dynarray *buf)
 
 #define DYN_ARRAY_INITIAL_SIZE 64
 
-/* use util_dynarray_trim to reduce the allocated storage */
 static inline void *
-util_dynarray_resize(struct util_dynarray *buf, unsigned newsize)
+util_dynarray_ensure_cap(struct util_dynarray *buf, unsigned newsize)
 {
-   void *p;
    if (newsize > buf->capacity) {
       if (buf->capacity == 0)
          buf->capacity = DYN_ARRAY_INITIAL_SIZE;
@@ -96,7 +94,20 @@ util_dynarray_resize(struct util_dynarray *buf, unsigned newsize)
       }
    }
 
-   p = (void *)((char *)buf->data + buf->size);
+   return (void *)((char *)buf->data + buf->size);
+}
+
+static inline void *
+util_dynarray_enlarge(struct util_dynarray *buf, int diff)
+{
+   return util_dynarray_ensure_cap(buf, buf->size + diff);
+}
+
+/* use util_dynarray_trim to reduce the allocated storage */
+static inline void *
+util_dynarray_resize(struct util_dynarray *buf, unsigned newsize)
+{
+   void *p = util_dynarray_ensure_cap(buf, newsize);
    buf->size = newsize;
 
    return p;
-- 
2.0.1

